
1. Create and write to a text file

#include <stdio.h>

void main() {
    FILE *fp;
    char text[100];
    fp = fopen("file1.txt", "w");
    if (fp == NULL) {
        printf("Error opening file!\n");
        return 1;
    }
    printf("Enter text to write: ");
    fgets(text, sizeof(text), stdin);
    fputs(text, fp);
    fclose(fp);
    printf("Text written to file successfully.\n");
}

Example Input:

Hello C Programming!

Output:

Text written to file successfully.

File file1.txt will contain Hello C Programming!.


---

2. Read contents of a file

#include <stdio.h>

void  main() {
    FILE *fp;
    char ch;
    fp = fopen("file1.txt", "r");
    if (fp == NULL) {
        printf("File not found!\n");
        return 1;
    }
    printf("File contents:\n");
    while ((ch = fgetc(fp)) != EOF) {
        putchar(ch);
    }
    fclose(fp);
}

Example Output:

File contents:
Hello C Programming!


---

3. Count number of lines in a file

#include <stdio.h>

void  main() {
    FILE *fp;
    char ch;
    int count = 0;
    fp = fopen("file1.txt", "r");
    if (fp == NULL) {
        printf("File not found!\n");
        return 1;
    }
    while ((ch = fgetc(fp)) != EOF) {
        if (ch == '\n') count++;
    }
    fclose(fp);
    printf("Number of lines: %d\n", count + 1);
}

Example Output:

Number of lines: 1


---

4. Copy contents from one file to another

#include <stdio.h>

void main() {
    FILE *src, *dest;
    char ch;
    src = fopen("file1.txt", "r");
    dest = fopen("file2.txt", "w");
    if (src == NULL || dest == NULL) {
        printf("Error opening files!\n");
        return 1;
    }
    while ((ch = fgetc(src)) != EOF) {
        fputc(ch, dest);
    }
    fclose(src);
    fclose(dest);
    printf("File copied successfully.\n");
}

Example Output:

File copied successfully.


---

5. Append text to a file

#include <stdio.h>

void  main() {
    FILE *fp;
    char text[100];
    fp = fopen("file1.txt", "a");
    if (fp == NULL) {
        printf("Error opening file!\n");
        return 1;
    }
    printf("Enter text to append: ");
    fgets(text, sizeof(text), stdin);
    fputs(text, fp);
    fclose(fp);
    printf("Text appended successfully.\n");
}

Example Input:

This is appended text.

Output:

Text appended successfully.


---

6. Count vowels in a file

#include <stdio.h>
#include <ctype.h>

void  main() {
    FILE *fp;
    char ch;
    int count = 0;
    fp = fopen("file1.txt", "r");
    if (fp == NULL) {
        printf("File not found!\n");
        return 1;
    }
    while ((ch = fgetc(fp)) != EOF) {
        ch = tolower(ch);
        if (ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u') count++;
    }
    fclose(fp);
    printf("Number of vowels: %d\n", count);
}

Example Output:

Number of vowels: 7


---

7. Read integers from a file and find the sum

#include <stdio.h>

void main() {
    FILE *fp;
    int num, sum = 0;
    fp = fopen("numbers.txt", "r");
    if (fp == NULL) {
        printf("File not found!\n");
        return 1;
    }
    while (fscanf(fp, "%d", &num) == 1) {
        sum += num;
    }
    fclose(fp);
    printf("Sum of integers: %d\n", sum);
}

Example Input File (numbers.txt):

5 10 20

Output:

Sum of integers: 35


---

8. Read a structure from a file

#include <stdio.h>

struct Student {
    char name[50];
    int age;
};

void main() {
    FILE *fp;
    struct Student s;
    fp = fopen("student.dat", "rb");
    if (fp == NULL) {
        printf("File not found!\n");
        return 1;
    }
    fread(&s, sizeof(s), 1, fp);
    fclose(fp);
    printf("Name: %s\nAge: %d\n", s.name, s.age);
}

Example (Writing first for test):

// Run once to create file
#include <stdio.h>
struct Student { char name[50]; int age; };
int main(){
    FILE *fp = fopen("student.dat", "wb");
    struct Student s = {"John", 20};
    fwrite(&s, sizeof(s), 1, fp);
    fclose(fp);
}

Output after reading:

Name: John
Age: 20


---

9. Sort names stored in a file

#include <stdio.h>
#include <string.h>

void main() {
    FILE *fp;
    char names[50][50], temp[50];
    int count = 0, i, j;
    fp = fopen("names.txt", "r");
    if (fp == NULL) {
        printf("File not found!\n");
        return 1;
    }
    while (fgets(names[count], sizeof(names[count]), fp)) {
        names[count][strcspn(names[count], "\n")] = 0;
        count++;
    }
    fclose(fp);
    for (i = 0; i < count - 1; i++) {
        for (j = i + 1; j < count; j++) {
            if (strcmp(names[i], names[j]) > 0) {
                strcpy(temp, names[i]);
                strcpy(names[i], names[j]);
                strcpy(names[j], temp);
            }
        }
    }
    printf("Sorted names:\n");
    for (i = 0; i < count; i++) {
        printf("%s\n", names[i]);
    }
    
}

Example Input File (names.txt):

Ravi
Anu
Kiran

Output:

Sorted names:
Anu
Kiran
Ravi


---

10. Search for a word in a file

#include <stdio.h>
#include <string.h>

void main() {
    FILE *fp;
    char word[50], temp[50];
    int found = 0;
    fp = fopen("file1.txt", "r");
    if (fp == NULL) {
        printf("File not found!\n");
        return 1;
    }
    printf("Enter word to search: ");
    scanf("%s", word);
    while (fscanf(fp, "%s", temp) == 1) {
        if (strcmp(temp, word) == 0) {
            found = 1;
            break;
        }
    }
    fclose(fp);
    if (found)
        printf("Word found in file.\n");
    else
        printf("Word not found in file.\n");
}

Example Input:

Hello

Output:

Word found in file.
